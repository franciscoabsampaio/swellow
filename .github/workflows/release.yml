name: Release

on:
  push:
    branches:
      - release
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag to release (e.g., v1.2.3)'
        required: true

env:
  PROJECT_NAME: swellow

jobs:
  prepare-release:
    name: Prepare Release
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Determine version
        id: get_version
        run: |
          if [[ "${{ github.event_name }}" == "push" ]]; then
            VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          else
            VERSION=${{ github.event.inputs.tag_name }}
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create release assets directory
        run: mkdir release-assets

      - name: Move Python distributions
        run: find artifacts/python-dist-* -name "*.whl" -o -name "*.tar.gz" | xargs -I {} mv {} release-assets/

      - name: Move Rust binaries
        run: |
          for dir in artifacts/raw-binary-*; do
            find "$dir" -type f -name "${{ env.PROJECT_NAME }}*" -exec mv {} release-assets/ \;
          done

      - name: Upload release assets
        uses: actions/upload-artifact@v4
        with:
          name: release-assets
          path: release-assets/

  publish-gh-release:
    name: Publish to GitHub Releases
    needs: prepare-release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download release assets
        uses: actions/download-artifact@v4
        with:
          name: release-assets
          path: release-assets

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.prepare-release.outputs.version }}
          files: release-assets/*

  publish-pypi:
    name: Publish to PyPI
    needs: prepare-release
    environment:
      name: pypi
      url: https://pypi.org/p/${{ env.PROJECT_NAME }}
    permissions:
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - name: Download release assets
        uses: actions/download-artifact@v4
        with:
          name: release-assets
          path: release-assets

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1
        with:
          packages-dir: release-assets/