name: Publish
on:
  push:
    branches:
      - release
  workflow_dispatch:

concurrency:
  group: publish
  cancel-in-progress: false  # Ensures every run completes (prevents skipping commits)

jobs:
  build-binaries:
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            dir: linux-x86_64
            bin_ext: ""
          - target: x86_64-pc-windows-gnu
            os: windows-latest
            dir: windows-x86_64
            bin_ext: ".exe"
          - target: x86_64-apple-darwin
            os: macos-latest
            dir: macos-x86_64
            bin_ext: ""
          - target: aarch64-apple-darwin
            os: macos-latest
            dir: macos-aarch64
            bin_ext: ""
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      - run: cargo build --release --target ${{ matrix.target }}
      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: bin-${{ matrix.dir }}
          path: target/${{ matrix.target }}/release/swellow${{ matrix.bin_ext }}
  package:
    runs-on: ubuntu-latest
    needs: [build-binaries]
    outputs:
      hash: ${{ steps.hash.outputs.hash }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      # Download all binaries from build-binary matrix
      - uses: actions/download-artifact@v4
        with:
          path: bins

      - name: Arrange binaries
        run: |
          mkdir -p src/swellow/bin/linux-x86_64
          mkdir -p src/swellow/bin/windows-x86_64
          mkdir -p src/swellow/bin/macos-x86_64
          mkdir -p src/swellow/bin/macos-aarch64
          cp bins/bin-linux-x86_64/swellow src/swellow/bin/linux-x86_64/swellow
          cp bins/bin-windows-x86_64/swellow.exe src/swellow/bin/windows-x86_64/swellow.exe
          cp bins/bin-macos-x86_64/swellow src/swellow/bin/macos-x86_64/swellow
          cp bins/bin-macos-aarch64/swellow src/swellow/bin/macos-aarch64/swellow

      # Setup Python + uv
      - uses: astral-sh/setup-uv@v6
        with:
          python-version: "3.x"
          enable-cache: true

      # Compute hash of all files to use as provenance subjects and build the package
      - id: hash
        run: echo "SOURCE_DATE_EPOCH=$(git log -1 --pretty=%ct)" >> $GITHUB_ENV
      - run: uv build

      # Upload the built wheel/sdist
      - uses: actions/upload-artifact@v4
        with:
          name: python-dist
          path: dist/*


  provenance:
    needs: [package]
    permissions:
      actions: read
      id-token: write
      contents: write
    # Can't pin with hash due to how this workflow works.
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v2.0.0
    with:
      base64-subjects: ${{ needs.package.outputs.hash }}

  create-release:
    # Upload the sdist, wheels, and provenance to a GitHub release. They remain
    # available as build artifacts for a while as well.
    needs: [provenance]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
      - name: create release
        run: >
          gh release create --draft --repo ${{ github.repository }}
          ${{ github.ref_name }}
          *.intoto.jsonl/* artifact/*
        env:
          GH_TOKEN: ${{ github.token }}

  publish-pypi:
    needs: [provenance]
    # Wait for approval before attempting to upload to PyPI. This allows reviewing the
    # files in the draft release.
    environment:
      name: publish
      url: https://pypi.org/project/${{github.repository}}/${{ github.ref_name }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: artifact
          path: artifact/
      - uses: pypa/gh-action-pypi-publish@f7600683efdcb7656dec5b29656edb7bc586e597 # v1.10.3
        with:
          repository-url: https://test.pypi.org/legacy/
          packages-dir: artifact/
      - uses: pypa/gh-action-pypi-publish@f7600683efdcb7656dec5b29656edb7bc586e597 # v1.10.3
        with:
          packages-dir: artifact/